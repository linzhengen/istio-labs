// Code generated by goctl. DO NOT EDIT!
// Source: helloworld.proto

package helloworldclient

import (
	"context"

	"helloworld/rpc/helloworld"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = helloworld.Request
	Response = helloworld.Response

	Helloworld interface {
		Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultHelloworld struct {
		cli zrpc.Client
	}
)

func NewHelloworld(cli zrpc.Client) Helloworld {
	return &defaultHelloworld{
		cli: cli,
	}
}

func (m *defaultHelloworld) Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := helloworld.NewHelloworldClient(m.cli.Conn())
	return client.Call(ctx, in, opts...)
}
